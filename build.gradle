plugins {
    id 'java'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.portswigger.burp.extender:burp-extender-api:2.3'
    implementation 'net.portswigger.burp.extensions:montoya-api:2023.10.3'
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

group = 'albinowax'
version = '1.4.2'
archivesBaseName = 'albinowaxUtils'

// Suppress deprecation warnings during compilation
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:-deprecation"
}

tasks.register('fatJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveClassifier.set('fat') // Add a classifier to distinguish the fat JAR
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with(tasks.getByName("jar"))
}

publishing {
    publications {
        gpr(MavenPublication) {
            // Remove the default JAR artifact
            artifacts.clear()
            
            from(components.java)
            artifactId = 'albinowaxUtils' // Explicitly set artifactId

            // Add the fat JAR artifact
            artifact(tasks.named('fatJar').get()) {
                classifier = 'fat'
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/portswigger-katie/albinowaxUtils")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}

// Explicit dependency for generateMetadataFileForGprPublication
tasks.named('generateMetadataFileForGprPublication').configure {
    dependsOn tasks.named('fatJar')
}
